name: Products Integration Test

on:
    pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GO_VERSION: 1.23.4
            NODEJS_VERSION: 16.20.2
            JAVA_DISTRIBUTION: temurin
            JAVA_VERSION: 11
        steps:
            - name: Checkout current repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Checkout console
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0
                repository: infinilabs/console
                path: console

            - name: Checkout gateway
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0
                repository: infinilabs/gateway
                path: gateway

            - name: Checkout agent
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0
                repository: infinilabs/agent
                path: agent

            - name: Checkout loadgen
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0
                repository: infinilabs/loadgen
                path: loadgen

            - name: Checkout framework-vendor
              uses: actions/checkout@v4
              with:
                ref: main
                fetch-depth: 0
                repository: infinilabs/framework-vendor
                path: vendor

            - name: Set up nodejs toolchain
              uses: actions/setup-node@v4
              with:
                node-version: ${{ env.NODEJS_VERSION }}
            
            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                path: |
                  node_modules
                key: ${{ runner.os }}-cnpm-${{ hashFiles('**/package.json') }}
                restore-keys: |
                    ${{ runner.os }}-cnpm-

            - name: Check nodejs toolchain
              run: |
                if ! command -v cnpm >/dev/null 2>&1; then
                  npm install -g rimraf
                  npm install -g cnpm@9.2.0
                fi
                node -v && npm -v && cnpm -v

            - name: Set up go toolchain
              uses: actions/setup-go@v5
              with:
                go-version: ${{ env.GO_VERSION }}
                check-latest: false
                cache: true

            - name: Check go toolchain
              run: go version

            - name: Set up java toolchain
              uses: actions/setup-java@v4
              with:
                distribution: ${{ env.JAVA_DISTRIBUTION }}
                java-version: ${{ env.JAVA_VERSION }}
            
            - name: Check java toolchain
              run: java -version && which java

            - name: Compile products code
              shell: bash
              run: |
                export WORKBASE=$HOME/go/src
                export WORK=$HOME/go/src/infini.sh

                mkdir -p $WORKBASE
                echo Home path is $HOME
                
                echo Check work folder $GITHUB_WORKSPACE
                ln -s $GITHUB_WORKSPACE $WORK
                ls -al $WORK/

                # for console web
                cd $WORKBASE/console/web && echo Compiling code at $PWD ...
                cnpm install --quiet --no-progress && cnpm run build --quiet

                # for products
                for p in console gateway agent loadgen; do
                    cd $WORK/$p && echo Compiling $p at $PWD ...
                    OFFLINE_BUILD=true make build >/dev/null 2>&1
                done
                
